version: '3.5'
services:
  app:
    container_name: reservo
    build:
      context: ./
      dockerfile: docker/app/Dockerfile
      args:
        APP_NAME: ${APP_NAME}
        APP_VERSION: ${APP_VERSION}
        APP_USERNAME: ${APP_USERNAME}
    depends_on:
      - mysql
    env_file:
      - .env
    volumes:
      - "/tmp/.m2:/root/.m2"
    ports:
      - "8082:8082"
    networks:
      - local-app-network
  mysql:
    container_name: mysql-instance
    build:
      context: docker/database
      dockerfile: Dockerfile
    ports:
      - "3306:3306"
    networks:
      - local-app-network
    env_file:
      - .env
    healthcheck:
      test: "mysqladmin ping -u root -p$${DB_CREDENTIALS_PASSWORD}"
      start_period: 30s

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - local-app-network
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    networks:
      - local-app-network
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

networks:
  local-app-network:
    driver: "bridge"